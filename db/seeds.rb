# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

ATTRIBUTE_MAP = [
  {
    record_type: 'relationship',
    field: 'subject_csid',
    label: 'Subject CSID',
    key: 'subject',
    nested_key: 'csid',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'relationship',
    field: 'subject_type',
    label: 'Subject Type',
    key: 'subject',
    nested_key: 'documentType',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'relationship',
    field: 'subject_uri',
    label: 'Subject URI',
    key: 'subject',
    nested_key: 'uri',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'relationship',
    field: 'object_csid',
    label: 'Object CSID',
    key: 'object',
    nested_key: 'csid',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'relationship',
    field: 'object_type',
    label: 'Object Type',
    key: 'object',
    nested_key: 'documentType',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'relationship',
    field: 'object_uri',
    label: 'Object URI',
    key: 'object',
    nested_key: 'uri',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'collectionobject',
    field: 'object_name',
    label: 'Object Name',
    key: 'collectionobjects_common',
    nested_key: 'objectName',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'object_number',
    label: 'Object Number',
    key: 'collectionobjects_common',
    nested_key: 'objectNumber',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'responsible_department',
    label: 'Department',
    key: 'collectionobjects_common',
    nested_key: 'responsibleDepartment',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'title',
    label: 'Title',
    key: 'collectionobjects_common',
    nested_key: 'title',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'title_type',
    label: 'Title Type',
    key: 'collectionobjects_common',
    nested_key: 'titleType',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'display_date',
    label: 'Date',
    key: 'collectionobjects_common',
    nested_key: 'dateDisplayDate',
    with: nil,
    searchable: false,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'brief_description',
    label: 'Description',
    key: 'collectionobjects_common',
    nested_key: 'briefDescription',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'content_persons',
    label: 'About (people)',
    key: 'collectionobjects_common',
    nested_key: 'contentPersons',
    with: 'contentPerson',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'content_concepts',
    label: 'About (subjects)',
    key: 'collectionobjects_common',
    nested_key: 'contentConcepts',
    with: 'contentConcept',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'physical_description',
    label: 'Condition',
    key: 'collectionobjects_common',
    nested_key: 'physicalDescription',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'dimension_summary',
    label: 'Dimenions',
    key: 'collectionobjects_common',
    nested_key: 'dimensionSummary',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'material_group',
    label: 'Materials',
    key: 'collectionobjects_common',
    nested_key: 'materialGroup',
    with: 'materialName',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'technique_group',
    label: 'Techniques',
    key: 'collectionobjects_common',
    nested_key: 'techniqueGroup',
    with: 'technique',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'object_production_organization_group',
    label: 'Producers (corporate)',
    key: 'collectionobjects_common',
    nested_key: 'objectProductionOrganizationGroup',
    with: 'objectProductionOrganization',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'object_production_people_group',
    label: 'Producers (group)',
    key: 'collectionobjects_common',
    nested_key: 'objectProductionPeopleGroup',
    with: 'objectProductionPeople',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'object_production_person_group',
    label: 'Producers (person)',
    key: 'collectionobjects_common',
    nested_key: 'objectProductionPersonGroup',
    with: 'objectProductionPerson',
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'ref_name',
    label: 'Reference Name',
    key: 'collectionspace_core',
    nested_key: 'refName',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'collectionobject',
    field: 'uri',
    label: 'URI',
    key: 'collectionspace_core',
    nested_key: 'uri',
    with: nil,
    searchable: false,
    viewable: false,
  },
  {
    record_type: 'collectionobject',
    field: 'origin_created_by',
    label: 'Created By',
    key: 'collectionspace_core',
    nested_key: 'createdBy',
    with: nil,
    searchable: true,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'origin_created_at',
    label: 'Created At',
    key: 'collectionspace_core',
    nested_key: 'createdAt',
    with: nil,
    searchable: false,
    viewable: true,
  },
  {
    record_type: 'collectionobject',
    field: 'origin_updated_at',
    label: 'Updated At',
    key: 'collectionspace_core',
    nested_key: 'updatedAt',
    with: nil,
    searchable: false,
    viewable: true,
  },
]

ATTRIBUTE_MAP.each do |map|
  if AttributeMap.where(map).empty?
    AttributeMap.create(map)
  end
end
